{"Name":"Customizable Range Slider","Id":2532,"Alias":"CustomizableRangeSlider","Description":"# Getting Started with RangeSlider\r\nVery flexible range slider fully customizable with just a few lines of code\r\n\r\n##Acquiring a license key for free\r\nRangeSlider is free to use but with limited functionality. To acquire your license key email us at \u003cxamarin.components@xpand-it.com\u003e with the subject \"RangeSlider - Request Key\". An email will be sent back to you containing your license key for RangeSlider.\r\n\r\n##Features\r\n* Two thumbs to pick a range of values\r\n* With infinite customizable option\r\n* Made to be fully personalizable\r\n* Quick and easy implementation\r\n\r\n##Usage\r\n\r\n####You can create a RangeSlider very easily\r\n\r\n#####XML\r\n\t\u003cXpandItComponents.RangeSliderView\r\n\t\tandroid:id=\"@+id/range_slider\"\r\n\t\tandroid:layout_width=\"match_parent\"\r\n\t\tandroid:layout_height=\"wrap_content\" /\u003e\r\n\t\t\r\n#####Code\r\n\tvar rangeSlider = new XpandItComponents.RangeSliderView(this);\r\n\r\n#####Register the component\r\n\trangeSlider.RegisterComponent(\"example@email.com\",\"awesomecredential\");\r\n\r\n#####Change the thumbs of the slider by using the drawable id or bitmaps\r\n\trangeSlider.ChangeThumbBitmaps(Resource.Drawable.normal_other_thumb, Resource.Drawable.pressed_other_thumb);\r\n\t// or\r\n\trangeSlider.ChangeThumbBitmaps(normalThumbBitmap, pressedThumbBitmap);\r\n\r\n#####Change other atributes as you want\r\n\trangeSlider.AbsoluteMin = 0;\r\n\trangeSlider.AbsoluteMax = 1000;\r\n\trangeSlider.InsideLineThinkness = 5;\r\n\trangeSlider.InsideLinePaint.Alpha = 100;\r\n\trangeSlider.InsideLinePaint.Color = Color.LightGray;\r\n\trangeSlider.OverlayLineThinkness = 10;\r\n\trangeSlider.OverlayLinePaint.Alpha = 255;\r\n\trangeSlider.OverlayLinePaint.SetShader(new LinearGradient(0, 0, 0, (20), Color.Black, Color.White, Shader.TileMode.Mirror));\r\n\t\r\n#####Listen to changes on the slider\r\n    var minTv = FindViewById\u003cTextView\u003e(Resource.Id.min_tv);\r\n    var maxTv = FindViewById\u003cTextView\u003e(Resource.Id.max_tv);\r\n\trangeSlider.RangeChanged += (sender, args) =\u003e\r\n\t\t\t{\r\n\t\t\t\tminTv.Text = rangeSlider.SelectedMin.ToString(\"MIN: ##0\");\r\n\t\t\t\tmaxTv.Text = rangeSlider.SelectedMax.ToString(\"MAX: ##0\");\r\n\t\t\t};\r\n\r\n\r\n\r\n##Requirements\r\n\r\n* Android API 15+","Version":"1.0.0","Summary":"Slider with a min and max thumb enabling to pick a range","QuickStart":"# Getting Started with RangeSlider\r\nVery flexible range slider fully customizable with just a few lines of code\r\n\r\n##Acquiring a license key\r\nRangeSlider is free to use but with limited functionality. To acquire your license key email us at \u003cxamarin.components@xpand-it.com\u003e with the subject \"RangeSlider - Request Key\". An email will be sent back to you containing your license key for RangeSlider.\r\n\r\n##Usage\r\n\r\n####You can create a RangeSlider very easily\r\n\r\n#####XML\r\n\t\u003cXpandItComponents.RangeSliderView\r\n\t\tandroid:id=\"@+id/range_slider\"\r\n\t\tandroid:layout_width=\"match_parent\"\r\n\t\tandroid:layout_height=\"wrap_content\" /\u003e\r\n\t\t\r\n#####Code\r\n\tvar rangeSlider = new XpandItComponents.RangeSliderView(this);\r\n\r\n#####Register the component\r\nBefore using the component do not forget to register it. The non registered version won\u0027t allow you to change the slider\u0027s maximum and minimum range values.\r\n\r\n\trangeSlider.RegisterComponent(\"example@email.com\",\"awesomecredential\");\r\n\r\n#####Change the thumbs of the slider by using the drawable id or bitmaps\r\n\trangeSlider.ChangeThumbBitmaps(Resource.Drawable.normal_other_thumb, Resource.Drawable.pressed_other_thumb);\r\n\t// or\r\n\trangeSlider.ChangeThumbBitmaps(normalThumbBitmap, pressedThumbBitmap);\r\n\r\n#####Change other atributes as you want\r\n\trangeSlider.AbsoluteMin = 0;\r\n\trangeSlider.AbsoluteMax = 1000;\r\n\trangeSlider.InsideLineThinkness = 5;\r\n\trangeSlider.InsideLinePaint.Alpha = 100;\r\n\trangeSlider.InsideLinePaint.Color = Color.LightGray;\r\n\trangeSlider.OverlayLineThinkness = 10;\r\n\trangeSlider.OverlayLinePaint.Alpha = 255;\r\n\trangeSlider.OverlayLinePaint.SetShader(new LinearGradient(0, 0, 0, (20), Color.Black, Color.White, Shader.TileMode.Mirror));\r\n\t\r\n#####Listen to changes on the slider\r\n    var minTv = FindViewById\u003cTextView\u003e(Resource.Id.min_tv);\r\n    var maxTv = FindViewById\u003cTextView\u003e(Resource.Id.max_tv);\r\n\trangeSlider.RangeChanged += (sender, args) =\u003e\r\n\t\t\t{\r\n\t\t\t\tminTv.Text = rangeSlider.SelectedMin.ToString(\"MIN: ##0\");\r\n\t\t\t\tmaxTv.Text = rangeSlider.SelectedMax.ToString(\"MAX: ##0\");\r\n\t\t\t};\r\n\r\n\r\n\r\n##Requirements\r\n\r\n* Android API 15+","Hash":"914c0925eb08c01b7f13c4e5fcd427da","TargetPlatforms":["android"],"TrialHash":null}